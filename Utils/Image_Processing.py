###########################################################################################################################
####################################################     LIBRARIES     ####################################################
###########################################################################################################################

import cv2

###########################################################################################################################
#################################################     INITIALIZATIONS     #################################################
###########################################################################################################################

class Image_Processing():
    def __init__(self, image = None):
        self.original_image = image
        self.resized_image = None
        self.tkinter_image = None

    def resize_image(self, size):
        if self.original_image is None: return

    def detect_color(self):
        # ↓↓ Applies the filter to the image
        self.masked_frame = cv2.inRange(self.resized_frame, CONST.LOWER_COLOR, CONST.UPPER_COLOR)
        return

###########################################################################################################################
#####################################################     PROGRAM     #####################################################
###########################################################################################################################

